import 'dart:io';

import 'package:flutter/material.dart';
// for the platform exception in catch
import 'package:flutter/services.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_storage/firebase_storage.dart';

import 'package:chat_app/widgets/auth/auth_form.dart';

class AuthScreen extends StatefulWidget {
  const AuthScreen({Key? key}) : super(key: key);

  @override
  State<AuthScreen> createState() => _AuthScreenState();
}

class _AuthScreenState extends State<AuthScreen> {
  final auth = FirebaseAuth.instance;

  var _isLoading = false;

  void _submitAuthForm(
    String email,
    String username,
    String password,
    File image,
    bool isLogin,
    // ctx for the scaffold snackbar
    BuildContext ctx,
  ) async {
    UserCredential userCredential;
    try {
      setState(() {
        _isLoading = true;
      });
      if (isLogin) {
        userCredential = await auth.signInWithEmailAndPassword(
          email: email,
          password: password,
        );
      } else {
        userCredential = await auth.createUserWithEmailAndPassword(
          email: email,
          password: password,
        );

        // Validation for image
        final ref = FirebaseStorage.instance
            .ref()
            .child('user-image')
            .child(userCredential.user!.uid + '.png');

        await ref.putFile(image);
        final url = await ref.getDownloadURL();

        // extra userdata when creating new user
        await FirebaseFirestore.instance
            .collection('users')
            // userCredential will have the user object
            // user will create uid field
            // uid is the user id will be generated by firebase for the user
            .doc(userCredential.user!.uid)
            // store extra data for that document
            // map with any key value pairs
            .set({
          'username': username,
          'email': email,
          'imageUrl': url,
        });
        setState(() {
          _isLoading = false;
        });
      }
    }
    // Platform specific error
    on PlatformException catch (error) {
      var message = 'An error occured. Please check your credentials.';

      if (error.message != null) {
        message = error.message!;
      }

      // Showing the error message in bottom snack bar
      Scaffold.of(ctx).showSnackBar(
        SnackBar(
          content: Text(message),
          backgroundColor: Theme.of(context).errorColor,
        ),
      );
    }
    // on typical error
    catch (error) {
      print(error);
      setState(() {
        _isLoading = true;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Flutter Chat'),
        actions: [
          DropdownButton(
            // the 3 dotted button in top right
            icon: Icon(
              Icons.more_vert,
              color: Theme.of(context).primaryIconTheme.color,
            ),
            items: [
              // button for logout
              DropdownMenuItem(
                value: 'logout',
                child: Row(
                  children: const [
                    Icon(
                      Icons.exit_to_app,
                    ),
                    SizedBox(width: 8.0),
                    Text('Logout'),
                  ],
                ),
              ),
            ],
            // to log the user out
            onChanged: (itemIdentifier) {
              if (itemIdentifier == 'logout') {
                FirebaseAuth.instance.signOut();
              }
            },
          ),
        ],
      ),
      backgroundColor: Theme.of(context).primaryColor,
      body: AuthForm(
        _submitAuthForm,
        _isLoading,
      ),
    );
  }
}
